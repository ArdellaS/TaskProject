@model IdentityExample1.Models.AccountViewModels.LoginViewModel
@using Identity.Dapper.Entities
@using Microsoft.AspNetCore.Identity

@inject SignInManager<DapperIdentityUser> SignInManager
@inject UserManager<DapperIdentityUser> UserManager
@{
    ViewData["Title"] = "Index";
    List<UserTasks> Tasks = (List<UserTasks>)ViewData["Tasks"];


}

<h1>All Tasks</h1>

<a href="/Task/OwnerTasks/@UserManager.GetUserId(User)/" class="btn btn-primary">Your Tasks</a>

<div>
    <h2 style="float: left">Open Tasks</h2>

    <span style="float: right">Sort By Date: <a href="/Task/SortByDateAsc/">Ascending</a> / <a href="/Task/SortByDateDesc/">Descending</a></span>
</div>
<br />

@foreach (UserTasks t in Tasks)
{
    if (t.Complete == 1)
    {
        <hr style="clear: both"/>

        <p>
            Task# @t.TaskId<br />
            Owned By User: <strong>@t.OwnerId</strong>
        </p>
        <p>
            @t.Description
        </p>
        <p>Due: @t.DueDate</p>

        <a href="/Task/MarkComplete/@t.TaskId" class="btn btn-primary">Mark Complete</a>
        <a href="/Task/DeleteTask/@t.TaskId" class="btn btn-danger delete">Delete</a>

        <hr />
    }

}

<h2>Closed Tasks</h2>
@foreach (UserTasks t in Tasks)
{
    if (t.Complete == 0)
    {
        <hr />

        <p>
            Task# @t.TaskId<br />
            Owned By User: <strong>@t.OwnerId</strong>
        </p>
        <p>
            @t.Description
        </p>
        <p>Due: @t.DueDate</p>

        <a href="/Task/DeleteTask/@t.TaskId" class="btn btn-danger">Delete</a>

        <hr />
    }

}

